DptMax = Dfull[which(Dfull$hosp==max(Dfull$hosp)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
HospScale = c(0,DptMax$hosp/HabMax)
#Rea
#find worse department
DptMax = Dfull[which(Dfull$rea==max(Dfull$rea)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
ReaScale = c(0,DptMax$rea/HabMax)
#Rad
#find worse department
DptMax = Dfull[which(Dfull$rad==max(Dfull$rad)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
RadScale = c(0,DptMax$rad/HabMax)
#DC
#find worse department
DptMax = Dfull[which(Dfull$dc==max(Dfull$dc)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
DCscale = c(0,DptMax$dc/HabMax)
} else {
HospScale = {}
ReaScale = {}
RadScale = {}
DCscale = {}
}
#Init
if ((Dpt == "France") | (nDpt == 0)) {
DDpt = Dfull                            #select all France
} else {
DDpt = Dfull[which(Dfull$dep==nDpt),]   #select departement
}
DDpt = aggregate(. ~ jour, DDpt, sum)   #aggregate by this department
D = DDpt
InPrct = TRUE
if (missing(InPrct)) {InPrct=FALSE}
# Read number of habitants of department
if (nDpt!=0) {
Habtxt = readLines(file.path(DAT_DIR,"habitants.csv"), warn = FALSE)
lineToRead = grep(paste("^",nDpt,sep=""),Habtxt)
HabLine = read.csv(text=Habtxt[lineToRead],sep=";",header=FALSE)
Hab = as.integer(HabLine[2])
} else {
df = read.csv(file.path(DAT_DIR,"habitants.csv"),sep=";")
Hab = sum(df$hab)
}
#Scale (y Max)
if (InPrct) {
#Hosp
#find worse department
DptMax = Dfull[which(Dfull$hosp==max(Dfull$hosp)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
HospScale = c(0,DptMax$hosp/HabMax)
#Rea
#find worse department
DptMax = Dfull[which(Dfull$rea==max(Dfull$rea)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
ReaScale = c(0,DptMax$rea/HabMax)
#Rad
#find worse department
DptMax = Dfull[which(Dfull$rad==max(Dfull$rad)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
RadScale = c(0,DptMax$rad/HabMax)
#DC
#find worse department
DptMax = Dfull[which(Dfull$dc==max(Dfull$dc)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
DCscale = c(0,DptMax$dc/HabMax)
} else {
HospScale = {}
ReaScale = {}
RadScale = {}
DCscale = {}
}
#Init
if ((Dpt == "France") | (nDpt == 0)) {
DDpt = Dfull                            #select all France
} else {
DDpt = Dfull[which(Dfull$dep==nDpt),]   #select departement
}
DDpt = aggregate(. ~ jour, DDpt, sum)   #aggregate by this department
D = DDpt
scale = HospScale
if(missing(Hab)) {Hab = 1}
#Results in part per 100 000 habitants
if(is_empty(scale)){
Hab = 1
} else {
Hab = Hab/100000
}
#Prepare for export in PNG
if(is_empty(scale)){
Prct = "per1_"
} else {
Prct = "per100000_"
}
png(file=file.path(RES_DIR,paste(Prct,Dpt,"_NbRea.png", sep =""), sep=""),
width=600, height=350)
#plot
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
dev.off()
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
dev.off()
dev.off()
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
D$jour
D$jour[201]
axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151],as.Date(D$jour[201]))))
as.Date(D$jour[201])
c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151],as.Date(D$jour[201]))
)
as.Date(D$jour[201])
c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151],as.Date(D$jour[201])))
c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151])
)
c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151],as.Date(D$jour[201]))
)
c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151],as.Date(D$jour[201])))
D$jour
View(D$jour)
226: reconfinement - 214: couvre feu
axis(1, at=c(0,50,100,150), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151])))
axis(1, at=c(0,50,100,150), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201]),as.Date(D$jour[214]),as.Date(D$jour[226])))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201]),"couvre-feu","reconfinement"))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201]),"couvre-feu","reconfinement"))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201]),as.Date("couvre-feu"),as.Date("reconfinement")))
D$jour[1]
as.c  axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement")))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement")))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement")))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,90,180,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[91]),as.character(D$jour[181]),as.character("couvre-feu"),as.character("reconfinement")))
#plot
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,90,180,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[91]),as.character(D$jour[181]),as.character("couvrfeu"),as.character("reconf")))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,90,180,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[91]),as.character(D$jour[181]),as.character("couvrfeu"),as.character("reconf")))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200,213,225), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement")))
D$jour[$]
length(D$jour)
D$jour[length(D$jour)]
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=2, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.5, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(D$jour[1]),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
View(D$jour)
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(D$jour[1]+"\nConfinement"),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character("couvre-feu"),as.character("reconfinement"),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"couvre-feu")),as.character(paste(D$jour[226],"reconfinement")),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,50,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(D$jour[51]),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"\ncouvre-feu")),as.character(paste(D$jour[226],"\nreconfinement")),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,55,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),paste(as.character(D$jour[56],"\nDeconfinement")),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"\ncouvre-feu")),as.character(paste(D$jour[226],"\nreconfinement")),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,55,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),paste(as.character(D$jour[56],"\nDeconfinement")),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"\ncouvre-feu")),as.character(paste(D$jour[226],"\nreconfinement")),as.character(D$jour[length(D$jour)])))
if (is_empty(scale)) {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons in reanimation in",Dpt), ylim = NULL)
} else {
plot(D$rea/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons in reanimation in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
#axis(1, at=c(0,50,100,150,200), labels=c(as.Date(D$jour[1]),as.Date(D$jour[51]),as.Date(D$jour[101]),as.Date(D$jour[151]),as.Date(D$jour[201])))
axis(1, cex.axis=0.7, at=c(0,55,100,150,200,213,225,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(paste(D$jour[56],"\nDeconfinement")),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"\ncouvre-feu")),as.character(paste(D$jour[226],"\nreconfinement")),as.character(D$jour[length(D$jour)])))
cloc
close
close()
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
debugSource('~/GitHub/COVID-19/WRK/PRG/Main.R')
InPrct = FALSE
ReadInhab <- function(nDpt) {
Habtxt = readLines(file.path(DAT_DIR,"habitants.csv"), warn = FALSE)
lineToRead = grep(paste("^",nDpt,sep=""),Habtxt)
HabLine = read.csv(text=Habtxt[lineToRead],sep=";",header=FALSE)
Hab = as.integer(HabLine[2])
Hab #return number of inhabitants
}
if (nDpt!=0) {
Habtxt = readLines(file.path(DAT_DIR,"habitants.csv"), warn = FALSE)
lineToRead = grep(paste("^",nDpt,sep=""),Habtxt)
HabLine = read.csv(text=Habtxt[lineToRead],sep=";",header=FALSE)
Hab = as.integer(HabLine[2])
} else {
df = read.csv(file.path(DAT_DIR,"habitants.csv"),sep=";")
Hab = sum(df$hab)
}
#Scale (y Max)
if (InPrct) {
#Hosp
#find worse department
DptMax = Dfull[which(Dfull$hosp==max(Dfull$hosp)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
HospScale = c(0,DptMax$hosp/HabMax)
#Rea
#find worse department
DptMax = Dfull[which(Dfull$rea==max(Dfull$rea)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
ReaScale = c(0,DptMax$rea/HabMax)
#Rad
#find worse department
DptMax = Dfull[which(Dfull$rad==max(Dfull$rad)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
RadScale = c(0,DptMax$rad/HabMax)
#DC
#find worse department
DptMax = Dfull[which(Dfull$dc==max(Dfull$dc)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
DCscale = c(0,DptMax$dc/HabMax)
} else {
HospScale = {}
ReaScale = {}
RadScale = {}
DCscale = {}
}
#Init
if ((Dpt == "France") | (nDpt == 0)) {
DDpt = Dfull                            #select all France
} else {
DDpt = Dfull[which(Dfull$dep==nDpt),]   #select departement
}
DDpt = aggregate(. ~ jour, DDpt, sum)   #aggregate by this department
D = DDpt
D
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
Dpt = "France"
nDpt = 0
InPrct = FALSE
Dfull
Dpt
nDpt
# Read number of habitants of department
if (nDpt!=0) {
Habtxt = readLines(file.path(DAT_DIR,"habitants.csv"), warn = FALSE)
lineToRead = grep(paste("^",nDpt,sep=""),Habtxt)
HabLine = read.csv(text=Habtxt[lineToRead],sep=";",header=FALSE)
Hab = as.integer(HabLine[2])
} else {
df = read.csv(file.path(DAT_DIR,"habitants.csv"),sep=";")
Hab = sum(df$hab)
}
#Scale (y Max)
if (InPrct) {
#Hosp
#find worse department
DptMax = Dfull[which(Dfull$hosp==max(Dfull$hosp)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
HospScale = c(0,DptMax$hosp/HabMax)
#Rea
#find worse department
DptMax = Dfull[which(Dfull$rea==max(Dfull$rea)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
ReaScale = c(0,DptMax$rea/HabMax)
#Rad
#find worse department
DptMax = Dfull[which(Dfull$rad==max(Dfull$rad)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
RadScale = c(0,DptMax$rad/HabMax)
#DC
#find worse department
DptMax = Dfull[which(Dfull$dc==max(Dfull$dc)),]
#find population of this department
HabMax = ReadInhab(DptMax$dep)/100000  #Patients per 100 000 habitants
#Set scale
DCscale = c(0,DptMax$dc/HabMax)
} else {
HospScale = {}
ReaScale = {}
RadScale = {}
DCscale = {}
}
#Init
if ((Dpt == "France") | (nDpt == 0)) {
DDpt = Dfull                            #select all France
} else {
DDpt = Dfull[which(Dfull$dep==nDpt),]   #select departement
}
DDpt = aggregate(. ~ jour, DDpt, sum)   #aggregate by this department
D = DDpt
D
Dpt
HospScale
ReaScale
Hab
#Results in part per 100 000 habitants
if(is_empty(scale)){
Hab = 1
} else {
Hab = Hab/100000
}
#Prepare for export in PNG
if(is_empty(scale)){
Prct = "per1_"
} else {
Prct = "per100000_"
}
png(file=file.path(RES_DIR,paste(Prct,Dpt,"_NbHosp.png", sep =""), sep=""),
width=900, height=525, res=90)
#plot
if (is_empty(scale)) {
plot(D$hosp/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons being hospitalised in",Dpt), ylim = NULL)
} else {
plot(D$hosp/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons being hospitalised in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2) #make axis label perpendicular to the axis
ylim
scale
is_empty(scale)
scale
scale = HospScale
scale
if (is_empty(scale)) {
plot(D$hosp/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons being hospitalised in",Dpt), ylim = NULL)
} else {
plot(D$hosp/Hab, xaxt = "n", xlab = "Date", ylab = "", ylim = scale)
title(ylab=paste("Number of persons being hospitalised in ",Dpt,"\n(Persons per 100 000 inhabitants)", sep=""), line=2)
}
par(las=2)
dev.off()
plot(D$hosp/Hab, xaxt = "n", xlab = "Date", ylab = paste("Number of persons being hospitalised in",Dpt), ylim = NULL)
D$jour
D$jour[250]
D$jour[265]
D$jour[270]
D$jour[273]
D$jour[273]
axis(1, cex.axis=0.7, at=c(0,55,100,150,200,213,225,273,length(D$jour)), labels=c(as.character(paste(D$jour[1],"\nConfinement")),as.character(paste(D$jour[56],"\nDeconfinement")),as.character(D$jour[101]),as.character(D$jour[151]),as.character(D$jour[201]),as.character(paste(D$jour[214],"\ncouvre-feu")),as.character(paste(D$jour[226],"\nreconfinement")),as.character(paste(D$jour[273],"\nredéconfinement")),as.character(D$jour[length(D$jour)])))
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
source('~/GitHub/COVID-19/WRK/PRG/Main.R')
